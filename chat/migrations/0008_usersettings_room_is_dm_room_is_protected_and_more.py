# Generated by Django 5.1.7 on 2025-05-07 05:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0007_alter_category_options_alter_meetup_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_registration', models.BooleanField(default=True, help_text='Allow new user registrations')),
                ('require_email_verification', models.BooleanField(default=True, help_text='Require email verification before account activation')),
                ('default_user_role', models.CharField(default='user', help_text='Default role for new users', max_length=20)),
                ('welcome_message', models.TextField(blank=True, help_text='Message sent to new users after registration')),
                ('allow_room_creation', models.BooleanField(default=True, help_text='Allow regular users to create chat rooms')),
                ('allow_file_uploads', models.BooleanField(default=True, help_text='Allow users to upload files in chat')),
                ('allow_image_uploads', models.BooleanField(default=True, help_text='Allow users to upload images in chat')),
                ('allow_private_rooms', models.BooleanField(default=True, help_text='Allow users to create private chat rooms')),
                ('allow_profile_customization', models.BooleanField(default=True, help_text='Allow users to customize their profiles')),
                ('content_filtering', models.CharField(default='medium', help_text='Level of automatic content filtering', max_length=20)),
                ('moderation_queue', models.BooleanField(default=False, help_text='Flag potentially problematic messages for review')),
                ('auto_ban_threshold', models.IntegerField(default=0, help_text='Number of violations before automatic ban (0 = disabled)')),
                ('custom_filter_words', models.TextField(blank=True, help_text='Custom words to filter (comma separated)')),
                ('inactive_user_period', models.IntegerField(default=0, help_text='Days of inactivity before account removal (0 = never)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
            },
        ),
        migrations.AddField(
            model_name='room',
            name='is_dm',
            field=models.BooleanField(default=False, help_text='Whether this room is for direct messages'),
        ),
        migrations.AddField(
            model_name='room',
            name='is_protected',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='room',
            name='password',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='chat.room')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_online', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='chat.announcement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_reads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('announcement', 'user')},
            },
        ),
        migrations.CreateModel(
            name='RoomBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_bookmarked', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='chat.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Room Bookmark',
                'verbose_name_plural': 'Room Bookmarks',
                'unique_together': {('user', 'room')},
            },
        ),
        migrations.CreateModel(
            name='UserInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engagement_score', models.IntegerField(default=0)),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_interests', to='chat.category')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_interests', to='chat.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'category'), ('user', 'room')},
            },
        ),
        migrations.CreateModel(
            name='UserRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationship_requests_received', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationship_requests_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('requester', 'receiver')},
            },
        ),
    ]
